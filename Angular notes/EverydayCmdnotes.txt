1. Creating a New Component:
    To create a new component, use the command:
    ```sh
    ng generate component <component-name>
    ```

    Note: 
    - I have imported the home component inside the app component, which implies that a child component can be imported into a parent component.
    - Can a parent component be imported into a child component?
    - The housing location component can be imported into the home component, indicating that a child component can be imported into another child component.

2. Creating a New Interface:
    To create a new interface, use the command:
    ```sh
    ng generate interface <interface-name>
    ```

    Questions on this unit:
    1. We created a `housingLocation` interface which has a set of data in it that we used in the home component. We created an instance of the interface and added values to it. Then, we imported the housing-location component inside the home component.
    - Question: How is the `housingLocation` interface related to the housing-location component?

3. Adding Inputs to a Component:
    - Inputs allow components to share data.
    - The direction of data sharing is from the parent component to the child component.

    Question: With `standalone = true`, will there still be a concept of parent and child components?
    Syntax:
    ```typescript
    @Input() // It is a decorator
    ```
4. Debugging Errors:
    - Question: How do you define which component is parent and which is child?
    - The `@Input()` decorator always sends the data from the parent to the child.
    - In our example:
        - Parent: Home component
        - Child: Housing-location component
        - Data needs to be sent from the parent to the child.
    - Question: What is the need to send the data from the parent component to the child component? Can't the data be fetched at the child component?
5. Services and Dependency injection:
    1. Testable code
    2. Reusable code
    3. Maintainable code


6. NgModule comes from FormsModules :import { FormsModule } from '@angular/forms';
   To fix ngForOf error include commonModule to the imports
   How to inject a servce into a component:
    constructor(private housingService: HousingService)
  {
    this.housingLocationList = this.housingService.getAllHousingLocations();
  }

7. Angukar routing 
   - Routing is the ability to navigate from one component to another.
   - SPA (Single page application) you change what the user sees by showing or hding 
     portions of the display that corresponds to particular components, rather than going out to the server to get a new page
   - To handle the navigation from one view to the next, we use Router

8. Short cmd to create the standalone compoenent 
    - ng g c details --standalone --inline-template
    ()

9. housingLocation?.id  , make housinglocation as undefined
    (submit)="somemethod()" : event binding
    this.applyForm.value.email?? '' : ?? indicates if the left hand side values are null/undefined then value on the right side will be applied

10. json-server --watch db.json

//Location to get the yearly calender : https://www.vecteezy.com/vector-art/36009076-one-page-2025-calendar-design-template-for-business-corporate-office